name: AI Improve Markdown Files

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]

concurrency:
  group: "pr-improve"
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  id-token: write
  actions: write

jobs:
  improve-md:
    if: contains(github.event.pull_request.labels.*.name, 'improve md') == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          token: ${{ secrets.REPO_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Install dependencies
        run: npm install openai fs-extra @octokit/rest

      - name: Improve Markdown files via AI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          node <<'EOF'
          import fs from 'fs-extra';
          import { execSync } from 'child_process';
          import OpenAI from 'openai';

          const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
          const prNumber = process.env.PR_NUMBER;

          // 📝 Get changed markdown files from PR diff
          const changedFiles = execSync(`gh pr diff ${prNumber} --name-only`, { encoding: 'utf8' })
            .split('\n')
            .filter(f => f.endsWith('.md') && fs.existsSync(f));

          if (changedFiles.length === 0) {
            console.log("No markdown files changed.");
            process.exit(0);
          }

          // 🧠 Improve each markdown file
          for (const file of changedFiles) {
            const content = fs.readFileSync(file, 'utf8');
            const prompt = `
            You are an editor that improves Markdown text **without changing its original language**.
            Keep the content’s main language intact.
            Improve clarity, structure, and grammar while preserving tone, style, and code formatting.
            If the Markdown is written in Chinese, Japanese, or any other language, keep using that language.
            
            --- Original Markdown ---
            ${content}
            `;
            # const prompt = `Improve this markdown file for clarity, grammar, and readability:\n\n${content}`;
            const res = await openai.chat.completions.create({
              model: "gpt-4o",
              messages: [{ role: "user", content: prompt }],
            });
            const improved = res.choices[0].message.content;
            fs.writeFileSync(file, improved, 'utf8');
            console.log(`✅ Improved ${file}`);
          }

          EOF

      - name: Add completion comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -m "docs: improve markdown by open ai"
          git push
          gh pr comment ${{ env.PR_NUMBER }} --body "🤖 Improve markdown, commit: $(git rev-parse --short HEAD)."
          gh pr edit ${{ env.PR_NUMBER }} --remove-label "improve md"
