name: AI Improve Markdown Files

on:
  issue_comment:
    types: [created]

jobs:
  improve-md:
    # if: contains(github.event.comment.body, 'improve md')
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/improve') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Install dependencies
        run: npm install openai glob fs-extra

      - name: Improve Markdown files via Open AI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PR_NUMBER: ${{ github.event.issue.number }}
        run: |
          node <<'EOF'
          import fs from 'fs-extra';
          import glob from 'glob';
          import OpenAI from 'openai';
          import { Octokit } from "@octokit/rest";

          const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
          const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

          const owner = process.env.GITHUB_REPOSITORY.split("/")[0];
          const repo = process.env.GITHUB_REPOSITORY.split("/")[1];
          const pull_number = parseInt(process.env.PR_NUMBER);

          // 1. Get list of changed markdown files in PR
          const { data: files } = await octokit.pulls.listFiles({
            owner,
            repo,
            pull_number
          });

          const mdFiles = files.filter(f => f.filename.endsWith('.md')).map(f => f.filename);
          if(mdFiles.length === 0){
            console.log("No markdown files changed.");
            process.exit(0);
          }

          // 2. Loop through markdown files and improve content
          for (const file of mdFiles) {
            const content = fs.readFileSync(file, 'utf-8');

            const prompt = `Improve the markdown content for clarity, grammar, formatting, and readability:\n\n${content}`;

            const completion = await openai.chat.completions.create({
              model: "gpt-4o-mini",
              messages: [{ role: "user", content: prompt }],
            });

            const improved = completion.choices[0].message.content;

            fs.writeFileSync(file, improved, 'utf-8');
            console.log(`Improved ${file}`);
          }

          // 3. Commit and push changes
          const execSync = require('child_process').execSync;
          execSync('git config user.name "github-actions[bot]"');
          execSync('git config user.email "github-actions[bot]@users.noreply.github.com"');
          execSync('git add .');
          execSync(`git commit -m "AI improved markdown files via comment" || echo "No changes to commit"`);
          execSync('git push');
          EOF
