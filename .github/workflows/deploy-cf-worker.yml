name: deploy-worker

on:
  push:
    branches:
      - main
# on:
#   pull_request:
#     types: [opened, reopened, synchronize]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for Worker Code Changes
        id: check_changes
        run: |
          if git diff --quiet HEAD^ -- ./cloudflare-workers/seo; then
            echo "[seo] No changes detected in Worker code. Skipping deployment."
            echo "[seo] SKIP_SEO_WORKER_DEPLOY=true" >> $GITHUB_OUTPUT
          else
            echo "[seo] Changes detected. Proceeding with deployment."
          fi
          if git diff --quiet HEAD^ -- ./cloudflare-workers/og-img; then
            echo "[og-img] No changes detected in Worker code. Skipping deployment."
            echo "[og-img] SKIP_OG_IMG_WORKER_DEPLOY=true" >> $GITHUB_OUTPUT
          else
            echo "[og-img] Changes detected. Proceeding with deployment."
          fi

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Generate routes data
        run: npm run gen:data

      - name: Build & Deploy SEO Worker
        uses: cloudflare/wrangler-action@v3
        if: ${{ steps.check_changes.outputs.SKIP_SEO_WORKER_DEPLOY != 'true' }}
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: cloudflare-workers/seo
          preCommands: npm run build

      - name: Build & Deploy OG Image Worker
        uses: cloudflare/wrangler-action@v3
        if: ${{ steps.check_changes.outputs.SKIP_OG_IMG_WORKER_DEPLOY != 'true' }}
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: cloudflare-workers/og-img
          preCommands: npm run build
